import { __awaiter } from "tslib";
import { PluginSettingTab, Setting } from 'obsidian';
export default class MeetingCleanupSettingTab extends PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        const { containerEl } = this;
        containerEl.empty();
        new Setting(containerEl)
            .setName('People Directory')
            .setDesc('Select the directory that contains people')
            .addDropdown(dropdown => {
            dropdown.addOption('', 'Select a directory');
            const directories = new Set(this.app.vault.getFiles().map(file => file.parent.path));
            directories.forEach(dir => {
                dropdown.addOption(dir, dir);
            });
            dropdown.setValue(this.plugin.settings.peopleDir);
            dropdown.onChange((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.peopleDir = value;
                yield this.plugin.saveSettings();
            }));
        });
        new Setting(containerEl)
            .setName('Meetings Directory')
            .setDesc('Select the directory that contains meetings')
            .addDropdown(dropdown => {
            dropdown.addOption('', 'Select a directory');
            const directories = new Set(this.app.vault.getFiles().map(file => file.parent.path));
            directories.forEach(dir => {
                dropdown.addOption(dir, dir);
            });
            dropdown.setValue(this.plugin.settings.meetingsDir);
            dropdown.onChange((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.meetingsDir = value;
                yield this.plugin.saveSettings();
            }));
        });
        new Setting(containerEl)
            .setName('Email Domain and Company Pairs')
            .setDesc('Enter email domain and company name pairs, one per line, in the format "domain: company"')
            .addTextArea(textArea => {
            textArea.setValue(this.plugin.settings.domainCompanyPairs.join('\n'));
            textArea.onChange((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.domainCompanyPairs = value.split('\n').map(line => line.trim());
                yield this.plugin.saveSettings();
            }));
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVldGluZ0NsZWFudXBTZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1lZXRpbmdDbGVhbnVwU2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBb0QsZ0JBQWdCLEVBQUUsT0FBTyxFQUFrQixNQUFNLFVBQVUsQ0FBQztBQUd2SCxNQUFNLENBQUMsT0FBTyxPQUFPLHdCQUF5QixTQUFRLGdCQUFnQjtJQUlyRSxZQUFZLEdBQVEsRUFBRSxNQUFzQjtRQUMzQyxLQUFLLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxPQUFPO1FBQ04sTUFBTSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQztRQUU3QixXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDcEIsSUFBSSxPQUFPLENBQUMsV0FBVyxDQUFDO2FBQ3RCLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQzthQUMzQixPQUFPLENBQUMsMkNBQTJDLENBQUM7YUFDcEQsV0FBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3ZCLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLG9CQUFvQixDQUFDLENBQUM7WUFDN0MsTUFBTSxXQUFXLEdBQUcsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3RGLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ3pCLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNsRCxRQUFRLENBQUMsUUFBUSxDQUFDLENBQU8sS0FBSyxFQUFFLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQ3ZDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNsQyxDQUFDLENBQUEsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7UUFFSixJQUFJLE9BQU8sQ0FBQyxXQUFXLENBQUM7YUFDdEIsT0FBTyxDQUFDLG9CQUFvQixDQUFDO2FBQzdCLE9BQU8sQ0FBQyw2Q0FBNkMsQ0FBQzthQUN0RCxXQUFXLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDdkIsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztZQUU3QyxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdEYsV0FBVyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDekIsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3BELFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBTyxLQUFLLEVBQUUsRUFBRTtnQkFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztnQkFDekMsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ2xDLENBQUMsQ0FBQSxDQUFDLENBQUM7UUFFSixDQUFDLENBQUMsQ0FBQztRQUVKLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQzthQUN0QixPQUFPLENBQUMsZ0NBQWdDLENBQUM7YUFDekMsT0FBTyxDQUFDLDBGQUEwRixDQUFDO2FBQ25HLFdBQVcsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUN2QixRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3RFLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBTyxLQUFLLEVBQUUsRUFBRTtnQkFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztnQkFDckYsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ2xDLENBQUMsQ0FBQSxDQUFDLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUVMLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJztcbmltcG9ydCB7IEFwcCwgRWRpdG9yLCBNYXJrZG93blZpZXcsIE1vZGFsLCBOb3RpY2UsIFBsdWdpbiwgUGx1Z2luU2V0dGluZ1RhYiwgU2V0dGluZywgVEZpbGUsIFRGb2xkZXIgfSBmcm9tICdvYnNpZGlhbic7XG5pbXBvcnQgTWVldGluZ0NsZWFudXAgZnJvbSAnLi9tYWluJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVldGluZ0NsZWFudXBTZXR0aW5nVGFiIGV4dGVuZHMgUGx1Z2luU2V0dGluZ1RhYiB7XG5cdHBsdWdpbjogTWVldGluZ0NsZWFudXA7XG5cblxuXHRjb25zdHJ1Y3RvcihhcHA6IEFwcCwgcGx1Z2luOiBNZWV0aW5nQ2xlYW51cCkge1xuXHRcdHN1cGVyKGFwcCwgcGx1Z2luKTtcblx0XHR0aGlzLnBsdWdpbiA9IHBsdWdpbjtcblx0fVxuXG5cdGRpc3BsYXkoKTogdm9pZCB7XG5cdFx0Y29uc3QgeyBjb250YWluZXJFbCB9ID0gdGhpcztcblxuXHRcdGNvbnRhaW5lckVsLmVtcHR5KCk7XG5cdFx0bmV3IFNldHRpbmcoY29udGFpbmVyRWwpXG5cdFx0XHQuc2V0TmFtZSgnUGVvcGxlIERpcmVjdG9yeScpXG5cdFx0XHQuc2V0RGVzYygnU2VsZWN0IHRoZSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBwZW9wbGUnKVxuXHRcdFx0LmFkZERyb3Bkb3duKGRyb3Bkb3duID0+IHtcblx0XHRcdFx0ZHJvcGRvd24uYWRkT3B0aW9uKCcnLCAnU2VsZWN0IGEgZGlyZWN0b3J5Jyk7XG5cdFx0XHRcdGNvbnN0IGRpcmVjdG9yaWVzID0gbmV3IFNldCh0aGlzLmFwcC52YXVsdC5nZXRGaWxlcygpLm1hcChmaWxlID0+IGZpbGUucGFyZW50IS5wYXRoKSk7XG5cdFx0XHRcdGRpcmVjdG9yaWVzLmZvckVhY2goZGlyID0+IHtcblx0XHRcdFx0XHRkcm9wZG93bi5hZGRPcHRpb24oZGlyLCBkaXIpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0ZHJvcGRvd24uc2V0VmFsdWUodGhpcy5wbHVnaW4uc2V0dGluZ3MucGVvcGxlRGlyKTtcblx0XHRcdFx0ZHJvcGRvd24ub25DaGFuZ2UoYXN5bmMgKHZhbHVlKSA9PiB7XG5cdFx0XHRcdFx0dGhpcy5wbHVnaW4uc2V0dGluZ3MucGVvcGxlRGlyID0gdmFsdWU7XG5cdFx0XHRcdFx0YXdhaXQgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cblx0XHRuZXcgU2V0dGluZyhjb250YWluZXJFbClcblx0XHRcdC5zZXROYW1lKCdNZWV0aW5ncyBEaXJlY3RvcnknKVxuXHRcdFx0LnNldERlc2MoJ1NlbGVjdCB0aGUgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgbWVldGluZ3MnKVxuXHRcdFx0LmFkZERyb3Bkb3duKGRyb3Bkb3duID0+IHtcblx0XHRcdFx0ZHJvcGRvd24uYWRkT3B0aW9uKCcnLCAnU2VsZWN0IGEgZGlyZWN0b3J5Jyk7XG5cblx0XHRcdFx0Y29uc3QgZGlyZWN0b3JpZXMgPSBuZXcgU2V0KHRoaXMuYXBwLnZhdWx0LmdldEZpbGVzKCkubWFwKGZpbGUgPT4gZmlsZS5wYXJlbnQhLnBhdGgpKTtcblx0XHRcdFx0ZGlyZWN0b3JpZXMuZm9yRWFjaChkaXIgPT4ge1xuXHRcdFx0XHRcdGRyb3Bkb3duLmFkZE9wdGlvbihkaXIsIGRpcik7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRkcm9wZG93bi5zZXRWYWx1ZSh0aGlzLnBsdWdpbi5zZXR0aW5ncy5tZWV0aW5nc0Rpcik7XG5cdFx0XHRcdGRyb3Bkb3duLm9uQ2hhbmdlKGFzeW5jICh2YWx1ZSkgPT4ge1xuXHRcdFx0XHRcdHRoaXMucGx1Z2luLnNldHRpbmdzLm1lZXRpbmdzRGlyID0gdmFsdWU7XG5cdFx0XHRcdFx0YXdhaXQgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHR9KTtcblxuXHRcdG5ldyBTZXR0aW5nKGNvbnRhaW5lckVsKVxuXHRcdFx0LnNldE5hbWUoJ0VtYWlsIERvbWFpbiBhbmQgQ29tcGFueSBQYWlycycpXG5cdFx0XHQuc2V0RGVzYygnRW50ZXIgZW1haWwgZG9tYWluIGFuZCBjb21wYW55IG5hbWUgcGFpcnMsIG9uZSBwZXIgbGluZSwgaW4gdGhlIGZvcm1hdCBcImRvbWFpbjogY29tcGFueVwiJylcblx0XHRcdC5hZGRUZXh0QXJlYSh0ZXh0QXJlYSA9PiB7XG5cdFx0XHRcdHRleHRBcmVhLnNldFZhbHVlKHRoaXMucGx1Z2luLnNldHRpbmdzLmRvbWFpbkNvbXBhbnlQYWlycy5qb2luKCdcXG4nKSk7XG5cdFx0XHRcdHRleHRBcmVhLm9uQ2hhbmdlKGFzeW5jICh2YWx1ZSkgPT4ge1xuXHRcdFx0XHRcdHRoaXMucGx1Z2luLnNldHRpbmdzLmRvbWFpbkNvbXBhbnlQYWlycyA9IHZhbHVlLnNwbGl0KCdcXG4nKS5tYXAobGluZSA9PiBsaW5lLnRyaW0oKSk7XG5cdFx0XHRcdFx0YXdhaXQgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cblx0fVxufVxuIl19