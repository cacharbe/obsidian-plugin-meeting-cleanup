import { parseYaml } from 'obsidian';
export class Person {
    constructor(name, frontMatterString) {
        const data = parseYaml(frontMatterString);
        this.name = name;
        this.company = data.company;
        this.location = data.location;
        this.title = data.title;
        this.email = data.email;
        this.client = data.client;
        this.aliases = data.aliases;
        this.languages = data.languages;
        this.publish = data.publish;
        this.date_last_spoken = data.date_last_spoken;
        this.follow_up = data.follow_up;
        this.linkedin = data.linkedin;
    }
    createLink() {
        return `[[${this.name}]]`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicGVyc29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFckMsTUFBTSxPQUFPLE1BQU07SUFjZixZQUFZLElBQVksRUFBRSxpQkFBeUI7UUFDL0MsTUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixDQUFRLENBQUM7UUFDdkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDWCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzlCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDeEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzVCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNsQyxDQUFDO0lBRUQsVUFBVTtRQUNQLE9BQU8sS0FBSyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDN0IsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VZYW1sIH0gZnJvbSAnb2JzaWRpYW4nO1xuXG5leHBvcnQgY2xhc3MgUGVyc29uIHtcblx0bmFtZTogc3RyaW5nOyBcbiAgICBjb21wYW55OiBzdHJpbmc7XG4gICAgbG9jYXRpb246IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgY2xpZW50OiBzdHJpbmdbXTtcbiAgICBhbGlhc2VzOiBzdHJpbmc7XG4gICAgbGFuZ3VhZ2VzOiBzdHJpbmc7XG4gICAgcHVibGlzaDogYm9vbGVhbjtcbiAgICBkYXRlX2xhc3Rfc3Bva2VuOiBzdHJpbmc7XG4gICAgZm9sbG93X3VwOiBzdHJpbmc7XG4gICAgbGlua2VkaW46IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgZnJvbnRNYXR0ZXJTdHJpbmc6IHN0cmluZykge1xuICAgICAgICBjb25zdCBkYXRhID0gcGFyc2VZYW1sKGZyb250TWF0dGVyU3RyaW5nKSBhcyBhbnk7XG5cdFx0dGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb21wYW55ID0gZGF0YS5jb21wYW55O1xuICAgICAgICB0aGlzLmxvY2F0aW9uID0gZGF0YS5sb2NhdGlvbjtcbiAgICAgICAgdGhpcy50aXRsZSA9IGRhdGEudGl0bGU7XG4gICAgICAgIHRoaXMuZW1haWwgPSBkYXRhLmVtYWlsO1xuICAgICAgICB0aGlzLmNsaWVudCA9IGRhdGEuY2xpZW50O1xuICAgICAgICB0aGlzLmFsaWFzZXMgPSBkYXRhLmFsaWFzZXM7XG4gICAgICAgIHRoaXMubGFuZ3VhZ2VzID0gZGF0YS5sYW5ndWFnZXM7XG4gICAgICAgIHRoaXMucHVibGlzaCA9IGRhdGEucHVibGlzaDtcbiAgICAgICAgdGhpcy5kYXRlX2xhc3Rfc3Bva2VuID0gZGF0YS5kYXRlX2xhc3Rfc3Bva2VuO1xuICAgICAgICB0aGlzLmZvbGxvd191cCA9IGRhdGEuZm9sbG93X3VwO1xuICAgICAgICB0aGlzLmxpbmtlZGluID0gZGF0YS5saW5rZWRpbjtcbiAgICB9XG5cbiAgICBjcmVhdGVMaW5rKCk6IHN0cmluZyB7XG4gICAgICAgcmV0dXJuIGBbWyR7dGhpcy5uYW1lfV1dYDtcbiAgICB9XG59XG4iXX0=